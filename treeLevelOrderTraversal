#include<bits/stdc++.h>
using namespace std;
/* Level Order Traversal  O(N) O(N) */

struct Node{
    int data;
    struct Node* left,*right;
    
    Node(int x)
    {
        data=x;
        left=NULL;
        right=NULL;
    }
};

vector<int> levelorderTraversal(Node* root)
{
    vector<int> ans;
    if(root==NULL)
    {
        return ans;
    }
    queue<Node*> q;
    q.push(root);
    
    while(!q.empty())
    {
        Node* t=q.front();
        q.pop();
        ans.push_back(t->data);
        if(t->left!=NULL)
        {
            q.push(t->left);
        }
        if(t->right!=NULL)
        {
            q.push(t->right);
        }
    }
    return ans;
}


vector<vector<int>> LevelOrderTraversal(Node *root)
{
    vector<vector<int>> ans;
    if(root==NULL)
    {
        return ans;
    }
    
    queue<Node*> q;
    q.push(root);
    
    while(!q.empty())
    {
        vector<int> l;
        int size=q.size();
        
        for(int i =0;i<size;i++)
        {
            Node *t = q.front();
            q.pop();
            if(t->left!=NULL)
            {
                q.push(t->left);
            }
            if(t->right!=NULL)
            {
                q.push(t->right);
            }
            
            l.push_back(t->data);
        }
        ans.push_back(l);
    }
    return ans;
}
int main()
{
    
    struct Node *root=new Node(1);
    root->left=new Node(2);
    root->right=new Node(3);
    root->left->left=new Node(4);
    root->left->right=new Node(5);
    root->right->left=new Node(6);
    root->right->right= new Node(7);
    
    vector<int> a=levelorderTraversal(root);
    cout<<"Level Order Traversal1 using 1d vector: ";
    for(int i=0;i<a.size();i++)
    {
        cout<<a[i]<<" ";
    }
    
     vector<vector<int>>b =LevelOrderTraversal(root);
    cout<<"\nLevel Order Traversal2 using 2d vector: ";
    for(int i=0;i<b.size();i++)
    {
        for(int j=0;j<b[i].size();j++)
        {
            cout<<b[i][j]<<" ";
        }
        
    }
    
    return 0;
}
